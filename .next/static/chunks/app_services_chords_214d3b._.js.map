{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nuruj/OneDrive/Desktop/monaarch_V1/Monaarch_Full_20_April/app/services/chords/ChordsClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function ChordsClient() {\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [originalAudioURL, setOriginalAudioURL] = useState<string | null>(null);\r\n  const [midiUrl, setMidiUrl] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const selectedFile = useRef<File | null>(null);\r\n\r\n  // Audio control refs and states\r\n  const originalAudioRef = useRef<HTMLAudioElement>(null);\r\n  const [originalVolume, setOriginalVolume] = useState(50);\r\n  const [isOriginalPaused, setIsOriginalPaused] = useState(true);\r\n\r\n  const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setError(null);\r\n    if (event.target.files?.[0]) {\r\n      const file = event.target.files[0];\r\n      if (file.size > 10 * 1024 * 1024) { // 10MB limit\r\n        setError(\"File size too large (max 10MB)\");\r\n        return;\r\n      }\r\n      selectedFile.current = file;\r\n      setOriginalAudioURL(URL.createObjectURL(file));\r\n      setUploaded(true);\r\n    }\r\n  };\r\n\r\n  const handleProcess = async () => {\r\n    if (!selectedFile.current) {\r\n      setError(\"Please select an audio file first\");\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    setError(null);\r\n    setMidiUrl(null);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile.current);\r\n\r\n      const response = await fetch(\"https://your-ngrok-url.ngrok-free.app/analyze/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Accept\": \"audio/midi\",  // Important for proper response handling\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => null);\r\n        throw new Error(errorData?.detail?.[0]?.msg || \"Analysis failed\");\r\n      }\r\n\r\n      const midiBlob = await response.blob();\r\n      if (midiBlob.size === 0) throw new Error(\"Empty MIDI response\");\r\n      \r\n      const url = URL.createObjectURL(midiBlob);\r\n      setMidiUrl(url);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : \"Failed to process audio\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Audio control functions remain the same...\r\n   const toggleOriginalPlayPause = () => {\r\n    if (originalAudioRef.current) {\r\n      if (isOriginalPaused) {\r\n        originalAudioRef.current.play();\r\n        setIsPlayingOriginal(true);\r\n        setIsOriginalPaused(false);\r\n        if (originalVolume === 0) setOriginalVolume(50);\r\n      } else {\r\n        originalAudioRef.current.pause();\r\n        setIsPlayingOriginal(false);\r\n        setIsOriginalPaused(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOriginalVolumeChange = (value: number) => {\r\n    setOriginalVolume(value);\r\n    if (originalAudioRef.current) {\r\n      originalAudioRef.current.volume = value / 100;\r\n      originalAudioRef.current.volume = value / 100;\r\n      if (value === 0) {\r\n        originalAudioRef.current.pause();\r\n        setIsPlayingOriginal(false);\r\n        setIsOriginalPaused(true);\r\n      } else if (isOriginalPaused) {\r\n        originalAudioRef.current.play();\r\n        setIsPlayingOriginal(true);\r\n        setIsOriginalPaused(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (originalAudioRef.current) {\r\n      originalAudioRef.current.volume = originalVolume / 100;\r\n    }\r\n  }, [originalVolume]);\r\n\r\n  return (\r\n    <section className=\"relative min-h-screen overflow-hidden\">\r\n      {/* Background and overlay remain unchanged */}\r\n\r\n      <div className=\"relative z-10 text-white\">\r\n        <div className=\"container mx-auto px-4 sm:px-6\">\r\n          <div className=\"py-12 md:py-20\">\r\n            {/* Error Display */}\r\n            {error && (\r\n              <div className=\"mb-6 p-4 bg-red-800/50 rounded-lg text-center\">\r\n                Error: {error}\r\n              </div>\r\n            )}\r\n\r\n            {/* Upload Section */}\r\n            {!uploaded ? (\r\n              <div className=\"mx-auto max-w-md bg-transparent\">\r\n                <input\r\n                  id=\"upload\"\r\n                  type=\"file\"\r\n                  accept=\"audio/mpeg, audio/wav\"\r\n                  className=\"w-full h-12 opacity-0 cursor-pointer\"\r\n                  onChange={handleUpload}\r\n                />\r\n                <div className=\"...\">\r\n                  <p className=\"...\">Click to Choose a File</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mt-6 text-center\">\r\n                <button\r\n                  className=\"px-6 py-3 bg-gradient-to-r from-green-400 to-blue-500 text-white font-semibold rounded shadow hover:from-green-500 hover:to-blue-600 transition-all duration-300 disabled:opacity-50\"\r\n                  onClick={handleProcess}\r\n                  disabled={processing}\r\n                >\r\n                  {processing ? 'Extracting...' : 'Extract Chords'}\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Results Section */}\r\n            {midiUrl && (\r\n              <div className=\"mt-10 space-y-8\">\r\n                {/* Audio Player Section (unchanged) */}\r\n\r\n                {/* MIDI Download Section */}\r\n                <div className=\"p-6 rounded-lg bg-gray-800/50\">\r\n                  <h2 className=\"text-xl font-semibold mb-4 text-center\">\r\n                    MIDI Results\r\n                  </h2>\r\n                  <div className=\"flex flex-col items-center gap-4\">\r\n                    <a\r\n                      href={midiUrl}\r\n                      download=\"chords.mid\"\r\n                      className=\"px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-full transition-all duration-300 flex items-center\"\r\n                    >\r\n                      <svg className=\"h-5 w-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        {/* Download icon */}\r\n                      </svg>\r\n                      Download MIDI File\r\n                    </a>\r\n                    <p className=\"text-sm text-gray-400\">\r\n                      MIDI file contains all detected chords with timing information\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Styles remain unchanged */}\r\n    </section>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}