{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nuruj/OneDrive/Desktop/monaarch_V1/fronend_work/app/services/basicSplitter/BasicSplitterClient.tsx"],"sourcesContent":["// BasicSplitterClient.tsx\r\n\r\n\"use client\";\r\n\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function BasicSplitterClient() {\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [originalAudioURL, setOriginalAudioURL] = useState<string | null>(null);\r\n\r\n  const [splitTracks, setSplitTracks] = useState<{\r\n    vocals: string | null;\r\n    drums: string | null;\r\n    bass: string | null;\r\n    others: string | null;\r\n  }>({\r\n    vocals: null,\r\n    drums: null,\r\n    bass: null,\r\n    others: null,\r\n  });\r\n\r\n  // Refs and states for audio elements\r\n  const originalAudioRef = useRef<HTMLAudioElement>(null);\r\n  const vocalsAudioRef = useRef<HTMLAudioElement>(null);\r\n  const drumsAudioRef = useRef<HTMLAudioElement>(null);\r\n  const bassAudioRef = useRef<HTMLAudioElement>(null);\r\n  const othersAudioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const [originalVolume, setOriginalVolume] = useState(0);\r\n  const [vocalsVolume, setVocalsVolume] = useState(0);\r\n  const [drumsVolume, setDrumsVolume] = useState(0);\r\n  const [bassVolume, setBassVolume] = useState(0);\r\n  const [othersVolume, setOthersVolume] = useState(0);\r\n\r\n  const [isPlayingOriginal, setIsPlayingOriginal] = useState(false);\r\n  const [isPlayingVocals, setIsPlayingVocals] = useState(false);\r\n  const [isPlayingDrums, setIsPlayingDrums] = useState(false);\r\n  const [isPlayingBass, setIsPlayingBass] = useState(false);\r\n  const [isPlayingOthers, setIsPlayingOthers] = useState(false);\r\n\r\n  const [isOriginalPaused, setIsOriginalPaused] = useState(true);\r\n  const [isVocalsPaused, setIsVocalsPaused] = useState(true);\r\n  const [isDrumsPaused, setIsDrumsPaused] = useState(true);\r\n  const [isBassPaused, setIsBassPaused] = useState(true);\r\n  const [isOthersPaused, setIsOthersPaused] = useState(true);\r\n\r\n  const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const file = event.target.files[0];\r\n      const url = URL.createObjectURL(file);\r\n      setOriginalAudioURL(url);\r\n      setUploaded(true);\r\n    }\r\n  };\r\n\r\n  const handleProcess = () => {\r\n    setProcessing(true);\r\n    // Simulate processing delay\r\n    setTimeout(() => {\r\n      // Simulate split tracks by reusing the original audio URL\r\n      setSplitTracks({\r\n        vocals: originalAudioURL,\r\n        drums: originalAudioURL,\r\n        bass: originalAudioURL,\r\n        others: originalAudioURL,\r\n      });\r\n      setProcessing(false);\r\n    }, 3000);\r\n  };\r\n\r\n  // Handle play/pause and volume for audio elements\r\n  const handlePlayPause = (\r\n    audioRef: React.RefObject<HTMLAudioElement>,\r\n    isPaused: boolean,\r\n    setIsPaused: React.Dispatch<React.SetStateAction<boolean>>,\r\n    setIsPlaying: React.Dispatch<React.SetStateAction<boolean>>,\r\n    volume: number,\r\n    setVolume: React.Dispatch<React.SetStateAction<number>>,\r\n  ) => {\r\n    if (audioRef.current) {\r\n      if (isPaused) {\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n        setIsPaused(false);\r\n        if (volume === 0) setVolume(50);\r\n      } else {\r\n        audioRef.current.pause();\r\n        setIsPlaying(false);\r\n        setIsPaused(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVolumeChange = (\r\n    audioRef: React.RefObject<HTMLAudioElement>,\r\n    value: number,\r\n    setVolume: React.Dispatch<React.SetStateAction<number>>,\r\n    setIsPlaying: React.Dispatch<React.SetStateAction<boolean>>,\r\n    setIsPaused: React.Dispatch<React.SetStateAction<boolean>>,\r\n  ) => {\r\n    setVolume(value);\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = value / 100;\r\n      if (value === 0) {\r\n        audioRef.current.pause();\r\n        setIsPlaying(false);\r\n        setIsPaused(true);\r\n      } else {\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n        setIsPaused(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Ensure audio volume is synced initially\r\n  useEffect(() => {\r\n    if (originalAudioRef.current) {\r\n      originalAudioRef.current.volume = originalVolume / 100;\r\n    }\r\n    // Repeat for other audio refs\r\n    if (vocalsAudioRef.current) {\r\n      vocalsAudioRef.current.volume = vocalsVolume / 100;\r\n    }\r\n    if (drumsAudioRef.current) {\r\n      drumsAudioRef.current.volume = drumsVolume / 100;\r\n    }\r\n    if (bassAudioRef.current) {\r\n      bassAudioRef.current.volume = bassVolume / 100;\r\n    }\r\n    if (othersAudioRef.current) {\r\n      othersAudioRef.current.volume = othersVolume / 100;\r\n    }\r\n  }, [\r\n    originalVolume,\r\n    vocalsVolume,\r\n    drumsVolume,\r\n    bassVolume,\r\n    othersVolume,\r\n  ]);\r\n\r\n  return (\r\n    <section className=\"relative min-h-screen overflow-hidden\">\r\n      {/* Background Video */}\r\n      <video\r\n        className=\"absolute top-0 left-0 w-full h-full object-cover\"\r\n        src=\"/Basic_BG.mp4\"\r\n        autoPlay\r\n        loop\r\n        muted\r\n      />\r\n\r\n      {/* Overlay for contrast */}\r\n      <div className=\"absolute top-0 left-0 w-full h-full bg-black opacity-50\"></div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"relative z-10 text-white\">\r\n        <div className=\"container mx-auto px-4 sm:px-6\">\r\n          <div className=\"py-12 md:py-20\">\r\n            {/* Section Header */}\r\n            <div className=\"pb-12 text-center\">\r\n              <h1 className=\"text-4xl font-bold md:text-5xl text-green-300\">\r\n                Basic Splitter\r\n              </h1>\r\n              <p className=\"text-lg mt-4 text-gray-300 max-w-3xl mx-auto\">\r\n                Split your audio into vocals, drums, bass, and other components with Monaarch's advanced audio separation technology.\r\n              </p>\r\n            </div>\r\n\r\n            {/* Upload Form */}\r\n            {!uploaded ? (\r\n              <form className=\"mx-auto max-w-md bg-transparent\">\r\n                <div className=\"space-y-5\">\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      id=\"upload\"\r\n                      type=\"file\"\r\n                      accept=\"audio/*\"\r\n                      className=\"w-full h-12 opacity-0 cursor-pointer\"\r\n                      onChange={handleUpload}\r\n                      required\r\n                    />\r\n                    <div className=\"absolute inset-0 flex items-center justify-center border-2 border-dashed border-gray-500 rounded-lg bg-transparent pointer-events-none\">\r\n                      <p className=\"text-gray-200 opacity-80\">\r\n                        Click to Choose a File<span className=\"text-red-500\">*</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <div className=\"mt-6\">\r\n                {!processing ? (\r\n                  <div className=\"text-center\">\r\n                    <button\r\n                      className=\"px-6 py-3 bg-gradient-to-r from-green-400 to-blue-500 text-white font-semibold rounded shadow hover:from-green-500 hover:to-blue-600 transition-all duration-300\"\r\n                      onClick={handleProcess}\r\n                    >\r\n                      Start Splitting\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex justify-center mt-6\">\r\n                    {/* Processing Animation */}\r\n                    <div className=\"flex items-center space-x-2 text-white\">\r\n                      <div className=\"loader-dot\"></div>\r\n                      <div className=\"loader-dot\"></div>\r\n                      <div className=\"loader-dot\"></div>\r\n                      <span>Processing...</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Display Split Tracks */}\r\n            {uploaded && !processing && splitTracks.vocals && (\r\n              <div className=\"mt-10 space-y-12\">\r\n                {/* Original Audio */}\r\n                <div className=\"p-6 rounded-lg bg-cover bg-center bg-no-repeat\">\r\n\r\n                  <h2 className=\"text-xl font-semibold mb-4 text-center\">Original Audio</h2>\r\n                  {/* Audio Controls */}\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      {/* Play/Pause Button */}\r\n                      <button\r\n                        onClick={() =>\r\n                          handlePlayPause(\r\n                            originalAudioRef,\r\n                            isOriginalPaused,\r\n                            setIsOriginalPaused,\r\n                            setIsPlayingOriginal,\r\n                            originalVolume,\r\n                            setOriginalVolume\r\n                          )\r\n                        }\r\n                        className=\"play-button focus:outline-none\"\r\n                      >\r\n                        {isOriginalPaused ? (\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-12 w-12 text-blue-500\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path d=\"M5 3.5v17l14-8.5-14-8.5z\" />\r\n                          </svg>\r\n                        ) : (\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-12 w-12 text-blue-500\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path d=\"M6 4h4v16h-4v-16zm8 0h4v16h-4v-16z\" />\r\n                          </svg>\r\n                        )}\r\n                      </button>\r\n                      {/* Volume Slider */}\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={originalVolume}\r\n                        onChange={(e) =>\r\n                          handleVolumeChange(\r\n                            originalAudioRef,\r\n                            Number(e.target.value),\r\n                            setOriginalVolume,\r\n                            setIsPlayingOriginal,\r\n                            setIsOriginalPaused\r\n                          )\r\n                        }\r\n                        className=\"w-32 h-2 bg-transparent appearance-none cursor-pointer slider-thumb\"\r\n                      />\r\n                    </div>\r\n                    {/* Equalizer */}\r\n                    {isPlayingOriginal ? (\r\n                      <div className=\"equalizer mt-4 w-full flex items-center\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"mt-4 w-full h-8 opacity-0 pointer-events-none\"></div>\r\n                    )}\r\n                    <audio\r\n                      ref={originalAudioRef}\r\n                      src={originalAudioURL!}\r\n                      onEnded={() => {\r\n                        setIsPlayingOriginal(false);\r\n                        setIsOriginalPaused(true);\r\n                        setOriginalVolume(0);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* Download Button */}\r\n                  <div className=\"mt-6 flex justify-center\">\r\n                    <a\r\n                      href={originalAudioURL!}\r\n                      download=\"original_audio.mp3\"\r\n                      className=\"px-6 py-3 bg-blue-600 text-white font-semibold rounded-full shadow-lg hover:bg-blue-700 transition-all duration-300 flex items-center\"\r\n                    >\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-5 w-5 mr-2\"\r\n                        fill=\"currentColor\"\r\n                        viewBox=\"0 0 20 20\"\r\n                      >\r\n                        <path d=\"M3 15a1 1 0 001 1h12a1 1 0 001-1v-3h-2v3H5v-3H3v3z\" />\r\n                        <path d=\"M7 10l3 3 3-3H9V4H7v6H4l3 3z\" />\r\n                      </svg>\r\n                      Download Original\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Split Tracks */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                  {/* Vocals */}\r\n                  <div className=\"p-6 rounded-lg bg-cover bg-center bg-no-repeat border-dashed border-2 border-white\">\r\n                    <h2 className=\"text-xl font-semibold mb-4 text-center\">Vocals</h2>\r\n                    {/* Audio Controls */}\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        {/* Play/Pause Button */}\r\n                        <button\r\n                          onClick={() =>\r\n                            handlePlayPause(\r\n                              vocalsAudioRef,\r\n                              isVocalsPaused,\r\n                              setIsVocalsPaused,\r\n                              setIsPlayingVocals,\r\n                              vocalsVolume,\r\n                              setVocalsVolume\r\n                            )\r\n                          }\r\n                          className=\"play-button focus:outline-none\"\r\n                        >\r\n                          {isVocalsPaused ? (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M5 3.5v17l14-8.5-14-8.5z\" />\r\n                            </svg>\r\n                          ) : (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M6 4h4v16h-4v-16zm8 0h4v16h-4v-16z\" />\r\n                            </svg>\r\n                          )}\r\n                        </button>\r\n                        {/* Volume Slider */}\r\n                        <input\r\n                          type=\"range\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={vocalsVolume}\r\n                          onChange={(e) =>\r\n                            handleVolumeChange(\r\n                              vocalsAudioRef,\r\n                              Number(e.target.value),\r\n                              setVocalsVolume,\r\n                              setIsPlayingVocals,\r\n                              setIsVocalsPaused\r\n                            )\r\n                          }\r\n                          className=\"w-32 h-2 bg-transparent appearance-none cursor-pointer slider-thumb\"\r\n                        />\r\n                      </div>\r\n                      {/* Equalizer */}\r\n                      {isPlayingVocals ? (\r\n                        <div className=\"equalizer mt-4 w-full flex items-center\">\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-4 w-full h-8 opacity-0 pointer-events-none\"></div>\r\n                      )}\r\n                      <audio\r\n                        ref={vocalsAudioRef}\r\n                        src={splitTracks.vocals!}\r\n                        onEnded={() => {\r\n                          setIsPlayingVocals(false);\r\n                          setIsVocalsPaused(true);\r\n                          setVocalsVolume(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {/* Download Button */}\r\n                    <div className=\"mt-6 flex justify-center\">\r\n                      <a\r\n                        href={splitTracks.vocals!}\r\n                        download=\"vocals.mp3\"\r\n                        className=\"px-6 py-3 bg-purple-600 text-white font-semibold rounded-full shadow-lg hover:bg-purple-700 transition-all duration-300 flex items-center\"\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"h-5 w-5 mr-2\"\r\n                          fill=\"currentColor\"\r\n                          viewBox=\"0 0 20 20\"\r\n                        >\r\n                          <path d=\"M3 15a1 1 0 001 1h12a1 1 0 001-1v-3h-2v3H5v-3H3v3z\" />\r\n                          <path d=\"M7 10l3 3 3-3H9V4H7v6H4l3 3z\" />\r\n                        </svg>\r\n                        Download Vocals\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Drums */}\r\n                  <div className=\"p-6 rounded-lg bg-cover bg-center bg-no-repeat border-dashed border-2 border-white\">\r\n                    <h2 className=\"text-xl font-semibold mb-4 text-center\">Drums</h2>\r\n                    {/* Audio Controls */}\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        {/* Play/Pause Button */}\r\n                        <button\r\n                          onClick={() =>\r\n                            handlePlayPause(\r\n                              drumsAudioRef,\r\n                              isDrumsPaused,\r\n                              setIsDrumsPaused,\r\n                              setIsPlayingDrums,\r\n                              drumsVolume,\r\n                              setDrumsVolume\r\n                            )\r\n                          }\r\n                          className=\"play-button focus:outline-none\"\r\n                        >\r\n                          {isDrumsPaused ? (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M5 3.5v17l14-8.5-14-8.5z\" />\r\n                            </svg>\r\n                          ) : (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M6 4h4v16h-4v-16zm8 0h4v16h-4v-16z\" />\r\n                            </svg>\r\n                          )}\r\n                        </button>\r\n                        {/* Volume Slider */}\r\n                        <input\r\n                          type=\"range\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={drumsVolume}\r\n                          onChange={(e) =>\r\n                            handleVolumeChange(\r\n                              drumsAudioRef,\r\n                              Number(e.target.value),\r\n                              setDrumsVolume,\r\n                              setIsPlayingDrums,\r\n                              setIsDrumsPaused\r\n                            )\r\n                          }\r\n                          className=\"w-32 h-2 bg-transparent appearance-none cursor-pointer slider-thumb\"\r\n                        />\r\n                      </div>\r\n                      {/* Equalizer */}\r\n                      {isPlayingDrums ? (\r\n                        <div className=\"equalizer mt-4 w-full flex items-center\">\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-4 w-full h-8 opacity-0 pointer-events-none\"></div>\r\n                      )}\r\n                      <audio\r\n                        ref={drumsAudioRef}\r\n                        src={splitTracks.drums!}\r\n                        onEnded={() => {\r\n                          setIsPlayingDrums(false);\r\n                          setIsDrumsPaused(true);\r\n                          setDrumsVolume(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {/* Download Button */}\r\n                    <div className=\"mt-6 flex justify-center\">\r\n                      <a\r\n                        href={splitTracks.drums!}\r\n                        download=\"drums.mp3\"\r\n                        className=\"px-6 py-3 bg-red-600 text-white font-semibold rounded-full shadow-lg hover:bg-red-700 transition-all duration-300 flex items-center\"\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"h-5 w-5 mr-2\"\r\n                          fill=\"currentColor\"\r\n                          viewBox=\"0 0 20 20\"\r\n                        >\r\n                          <path d=\"M3 15a1 1 0 001 1h12a1 1 0 001-1v-3h-2v3H5v-3H3v3z\" />\r\n                          <path d=\"M7 10l3 3 3-3H9V4H7v6H4l3 3z\" />\r\n                        </svg>\r\n                        Download Drums\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Bass */}\r\n                  <div className=\"p-6 rounded-lg bg-cover bg-center bg-no-repeat border-dashed border-2 border-white\">\r\n                    <h2 className=\"text-xl font-semibold mb-4 text-center\">Bass</h2>\r\n                    {/* Audio Controls */}\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        {/* Play/Pause Button */}\r\n                        <button\r\n                          onClick={() =>\r\n                            handlePlayPause(\r\n                              bassAudioRef,\r\n                              isBassPaused,\r\n                              setIsBassPaused,\r\n                              setIsPlayingBass,\r\n                              bassVolume,\r\n                              setBassVolume\r\n                            )\r\n                          }\r\n                          className=\"play-button focus:outline-none\"\r\n                        >\r\n                          {isBassPaused ? (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M5 3.5v17l14-8.5-14-8.5z\" />\r\n                            </svg>\r\n                          ) : (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M6 4h4v16h-4v-16zm8 0h4v16h-4v-16z\" />\r\n                            </svg>\r\n                          )}\r\n                        </button>\r\n                        {/* Volume Slider */}\r\n                        <input\r\n                          type=\"range\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={bassVolume}\r\n                          onChange={(e) =>\r\n                            handleVolumeChange(\r\n                              bassAudioRef,\r\n                              Number(e.target.value),\r\n                              setBassVolume,\r\n                              setIsPlayingBass,\r\n                              setIsBassPaused\r\n                            )\r\n                          }\r\n                          className=\"w-32 h-2 bg-transparent appearance-none cursor-pointer slider-thumb\"\r\n                        />\r\n                      </div>\r\n                      {/* Equalizer */}\r\n                      {isPlayingBass ? (\r\n                        <div className=\"equalizer mt-4 w-full flex items-center\">\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-4 w-full h-8 opacity-0 pointer-events-none\"></div>\r\n                      )}\r\n                      <audio\r\n                        ref={bassAudioRef}\r\n                        src={splitTracks.bass!}\r\n                        onEnded={() => {\r\n                          setIsPlayingBass(false);\r\n                          setIsBassPaused(true);\r\n                          setBassVolume(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {/* Download Button */}\r\n                    <div className=\"mt-6 flex justify-center\">\r\n                      <a\r\n                        href={splitTracks.bass!}\r\n                        download=\"bass.mp3\"\r\n                        className=\"px-6 py-3 bg-yellow-600 text-white font-semibold rounded-full shadow-lg hover:bg-yellow-700 transition-all duration-300 flex items-center\"\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"h-5 w-5 mr-2\"\r\n                          fill=\"currentColor\"\r\n                          viewBox=\"0 0 20 20\"\r\n                        >\r\n                          <path d=\"M3 15a1 1 0 001 1h12a1 1 0 001-1v-3h-2v3H5v-3H3v3z\" />\r\n                          <path d=\"M7 10l3 3 3-3H9V4H7v6H4l3 3z\" />\r\n                        </svg>\r\n                        Download Bass\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Others */}\r\n                  <div className=\"p-6 rounded-lg bg-cover bg-center bg-no-repeat border-dashed border-2 border-white\">\r\n                    <h2 className=\"text-xl font-semibold mb-4 text-center\">Music</h2>\r\n                    {/* Audio Controls */}\r\n                    <div className=\"flex flex-col items-center\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        {/* Play/Pause Button */}\r\n                        <button\r\n                          onClick={() =>\r\n                            handlePlayPause(\r\n                              othersAudioRef,\r\n                              isOthersPaused,\r\n                              setIsOthersPaused,\r\n                              setIsPlayingOthers,\r\n                              othersVolume,\r\n                              setOthersVolume\r\n                            )\r\n                          }\r\n                          className=\"play-button focus:outline-none\"\r\n                        >\r\n                          {isOthersPaused ? (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M5 3.5v17l14-8.5-14-8.5z\" />\r\n                            </svg>\r\n                          ) : (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              className=\"h-12 w-12 text-blue-500\"\r\n                              fill=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path d=\"M6 4h4v16h-4v-16zm8 0h4v16h-4v-16z\" />\r\n                            </svg>\r\n                          )}\r\n                        </button>\r\n                        {/* Volume Slider */}\r\n                        <input\r\n                          type=\"range\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={othersVolume}\r\n                          onChange={(e) =>\r\n                            handleVolumeChange(\r\n                              othersAudioRef,\r\n                              Number(e.target.value),\r\n                              setOthersVolume,\r\n                              setIsPlayingOthers,\r\n                              setIsOthersPaused\r\n                            )\r\n                          }\r\n                          className=\"w-32 h-2 bg-transparent appearance-none cursor-pointer slider-thumb\"\r\n                        />\r\n                      </div>\r\n                      {/* Equalizer */}\r\n                      {isPlayingOthers ? (\r\n                        <div className=\"equalizer mt-4 w-full flex items-center\">\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                          <div className=\"bar\"></div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"mt-4 w-full h-8 opacity-0 pointer-events-none\"></div>\r\n                      )}\r\n                      <audio\r\n                        ref={othersAudioRef}\r\n                        src={splitTracks.others!}\r\n                        onEnded={() => {\r\n                          setIsPlayingOthers(false);\r\n                          setIsOthersPaused(true);\r\n                          setOthersVolume(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {/* Download Button */}\r\n                    <div className=\"mt-6 flex justify-center\">\r\n                      <a\r\n                        href={splitTracks.others!}\r\n                        download=\"others.mp3\"\r\n                        className=\"px-6 py-3 bg-teal-600 text-white font-semibold rounded-full shadow-lg hover:bg-teal-700 transition-all duration-300 flex items-center\"\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"h-5 w-5 mr-2\"\r\n                          fill=\"currentColor\"\r\n                          viewBox=\"0 0 20 20\"\r\n                        >\r\n                          <path d=\"M3 15a1 1 0 001 1h12a1 1 0 001-1v-3h-2v3H5v-3H3v3z\" />\r\n                          <path d=\"M7 10l3 3 3-3H9V4H7v6H4l3 3z\" />\r\n                        </svg>\r\n                        Download Others\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Styles */}\r\n      <style jsx>{`\r\n  /* Container Background */\r\n  .control-container {\r\n    background: linear-gradient(135deg, #1a1b26, #16161e);\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    box-shadow: 0 8px 32px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  /* Equalizer Styles */\r\n  .equalizer {\r\n    height: 40px;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 2px;\r\n  }\r\n\r\n  .bar {\r\n    width: 120px;\r\n    background: linear-gradient(to top, #6366f1, #ec4899, #f59e0b);\r\n    /* Increase the animation duration for a more gradual cycle */\r\n    animation: equalize 2s infinite ease-in-out;\r\n    border-radius: 2px 2px 0 0;\r\n  }\r\n\r\n  /* Adjust delays for a smooth staggered effect */\r\n  .bar:nth-child(1) { animation-delay: 0s; }\r\n  .bar:nth-child(2) { animation-delay: 0.15s; }\r\n  .bar:nth-child(3) { animation-delay: 0.3s; }\r\n  .bar:nth-child(4) { animation-delay: 0.45s; }\r\n  .bar:nth-child(5) { animation-delay: 0.6s; }\r\n  .bar:nth-child(6) { animation-delay: 0.75s; }\r\n  .bar:nth-child(7) { animation-delay: 0.9s; }\r\n  .bar:nth-child(8) { animation-delay: 1.05s; }\r\n\r\n  /* Loader Styles */\r\n        .loader-dot {\r\n          width: 10px;\r\n          height: 10px;\r\n          background: #ddd;\r\n          border-radius: 50%;\r\n          animation: loader 1s infinite alternate;\r\n        }\r\n        .loader-dot:nth-child(1) {\r\n          animation-delay: 0s;\r\n        }\r\n        .loader-dot:nth-child(2) {\r\n          animation-delay: 0.2s;\r\n        }\r\n        .loader-dot:nth-child(3) {\r\n          animation-delay: 0.4s;\r\n        }\r\n\r\n  /* Keyframes: Increase amplitude by having a lower baseline and higher peak */\r\n  @keyframes equalize {\r\n    0%, 100% {\r\n      height: 10%;  /* Lower starting/ending height */\r\n    }\r\n    50% {\r\n      height: 100%;  /* Increase peak to fill the container */\r\n    }\r\n  }\r\n\r\n  /* Button Styles */\r\n  .control-button {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(8px);\r\n    border: none;\r\n    padding: 0.8rem;\r\n    border-radius: 8px;\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  /* Volume Slider Styles */\r\n  .slider-thumb {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-radius: 8px;\r\n    height: 4px;\r\n  }\r\n\r\n  .slider-thumb::-webkit-slider-thumb {\r\n    width: 16px;\r\n    height: 16px;\r\n    background: linear-gradient(45deg, #6366f1, #ec4899);\r\n    border: 2px solid #fff;\r\n  }\r\n\r\n  /* Maintain original loader scaling */\r\n  @keyframes loader {\r\n    to {\r\n      transform: scale(1.5);\r\n      background: #ec4899;\r\n    }\r\n  }\r\n`}</style>\r\n\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}