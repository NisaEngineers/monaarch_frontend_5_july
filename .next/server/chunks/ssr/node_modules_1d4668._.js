module.exports = {

"[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
exports._ = _interop_require_default;
}}),
"[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) return obj;
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
        default: obj
    };
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) return cache.get(obj);
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
            else newObj[key] = obj[key];
        }
    }
    newObj.default = obj;
    if (cache) cache.set(obj, newObj);
    return newObj;
}
exports._ = _interop_require_wildcard;
}}),
"[project]/node_modules/react-draggable-lite/build/draggable.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = __turbopack_require__("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var _react2 = _interopRequireDefault(_react);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Draggable = function(_React$Component) {
    _inherits(Draggable, _React$Component);
    function Draggable(props) {
        _classCallCheck(this, Draggable);
        var _this = _possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));
        _this.state = {
            xOffset: 0,
            yOffset: 0
        };
        _this.isDragging = false;
        _this.currentMouseCoord = {
            x: null,
            y: null
        };
        _this.addEventListeners = _this.addEventListeners.bind(_this);
        _this.removeEventListeners = _this.removeEventListeners.bind(_this);
        _this.handleStart = _this.handleStart.bind(_this);
        _this.getMouseCoord = _this.getMouseCoord.bind(_this);
        _this.elementWasClicked = _this.elementWasClicked.bind(_this);
        _this.handleMove = _this.handleMove.bind(_this);
        _this.handleEnd = _this.handleEnd.bind(_this);
        return _this;
    }
    _createClass(Draggable, [
        {
            key: 'componentDidMount',
            value: function componentDidMount() {
                this.addEventListeners();
            }
        },
        {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
                this.removeEventListeners();
            }
        },
        {
            key: 'addEventListeners',
            value: function addEventListeners() {
                document.addEventListener('mousedown', this.handleStart);
                document.addEventListener('mousemove', this.handleMove);
                document.addEventListener('mouseup', this.handleEnd);
                document.addEventListener('touchstart', this.handleStart);
                document.addEventListener('touchmove', this.handleMove);
                document.addEventListener('touchend', this.handleEnd);
            }
        },
        {
            key: 'removeEventListeners',
            value: function removeEventListeners() {
                document.removeEventListener('mousedown', this.handleStart);
                document.removeEventListener('mousemove', this.handleMove);
                document.removeEventListener('mouseup', this.handleEnd);
                document.removeEventListener('touchstart', this.handleStart);
                document.removeEventListener('touchmove', this.handleMove);
                document.removeEventListener('touchend', this.handleEnd);
            }
        },
        {
            key: 'handleStart',
            value: function handleStart(e) {
                if (this.elementWasClicked(e.target)) {
                    if (this.props.onDragStart) this.props.onDragStart();
                    this.isDragging = true;
                    var _getMouseCoord = this.getMouseCoord(e), clientX = _getMouseCoord.clientX, clientY = _getMouseCoord.clientY;
                    this.currentMouseCoord = {
                        x: clientX,
                        y: clientY
                    };
                }
            }
        },
        {
            key: 'elementWasClicked',
            value: function elementWasClicked(target) {
                var wasClicked = false;
                var currentElement = target;
                while(currentElement){
                    if (currentElement === this.card) {
                        wasClicked = true;
                        break;
                    }
                    currentElement = currentElement.parentNode;
                }
                return wasClicked;
            }
        },
        {
            key: 'getMouseCoord',
            value: function getMouseCoord(e) {
                var event = e.touches && e.touches[0] || e;
                return {
                    clientX: event.clientX,
                    clientY: event.clientY
                };
            }
        },
        {
            key: 'handleMove',
            value: function handleMove(e) {
                if (!this.isDragging) return;
                var _getMouseCoord2 = this.getMouseCoord(e), clientX = _getMouseCoord2.clientX, clientY = _getMouseCoord2.clientY;
                var deltaX = clientX - this.currentMouseCoord.x;
                var deltaY = clientY - this.currentMouseCoord.y;
                this.setState({
                    xOffset: this.state.xOffset + deltaX,
                    yOffset: this.state.yOffset + deltaY
                });
                this.currentMouseCoord = {
                    x: clientX,
                    y: clientY
                };
                if (this.props.onDragging) this.props.onDragging();
            }
        },
        {
            key: 'handleEnd',
            value: function handleEnd() {
                if (!this.isDragging) return;
                this.isDragging = false;
                this.forceUpdate();
                if (this.props.onDragEnd) this.props.onDragEnd();
            }
        },
        {
            key: 'calculateStyle',
            value: function calculateStyle() {
                var _state = this.state, xOffset = _state.xOffset, yOffset = _state.yOffset;
                return Object.assign({}, this.props.children.props.style, {
                    display: 'inline-block',
                    transform: 'translateX(' + xOffset + 'px) translateY(' + yOffset + 'px)',
                    willChange: '' + (this.isDragging ? 'transform' : 'unset')
                });
            }
        },
        {
            key: 'render',
            value: function render() {
                var _this2 = this;
                return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {
                    style: this.calculateStyle(),
                    ref: function ref(card) {
                        _this2.card = card;
                    }
                });
            }
        }
    ]);
    return Draggable;
}(_react2.default.Component);
Draggable.propTypes = {
    onDragStart: _react.PropTypes.func,
    onDragging: _react.PropTypes.func,
    onDragEnd: _react.PropTypes.func,
    children: _react.PropTypes.element.isRequired
};
exports.default = Draggable;
}}),

};

//# sourceMappingURL=node_modules_1d4668._.js.map