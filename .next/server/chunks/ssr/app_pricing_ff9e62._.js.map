{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nuruj/OneDrive/Desktop/monaarch_V1/Monaarch_Full_20_April/app/pricing/PricingClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  Elements,\r\n  CardNumberElement,\r\n  CardExpiryElement,\r\n  CardCvcElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst stripePromise = loadStripe(\"YOUR_STRIPE_PUBLIC_KEY\");\r\n\r\nfunction PaymentForm({ selectedPlan }: { selectedPlan: string }) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [cardholderName, setCardholderName] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) return;\r\n\r\n    const card = elements.getElement(CardNumberElement);\r\n    if (!card) return;\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card,\r\n      billing_details: {\r\n        name: cardholderName,\r\n      },\r\n    });\r\n\r\n    if (error) {\r\n      alert(error.message);\r\n    } else {\r\n      alert(`Payment method created for ${selectedPlan}: ${paymentMethod.id}`);\r\n      // TODO: Send paymentMethod.id to your server to complete the payment\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm mb-1\">Cardholder Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={cardholderName}\r\n          onChange={(e) => setCardholderName(e.target.value)}\r\n          className=\"w-full px-4 py-2 bg-gray-800 text-white rounded-md border border-gray-600 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm mb-1\">Card Number</label>\r\n        <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n          <CardNumberElement className=\"w-full\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-4\">\r\n        <div className=\"flex-1\">\r\n          <label className=\"block text-sm mb-1\">Expiry Date</label>\r\n          <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n            <CardExpiryElement className=\"w-full\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <label className=\"block text-sm mb-1\">CVC</label>\r\n          <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n            <CardCvcElement className=\"w-full\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-3 bg-gradient-to-r from-green-400 to-blue-500 text-white font-semibold rounded-lg shadow-lg hover:from-green-500 hover:to-blue-600 transition-all duration-300\"\r\n      >\r\n        Pay with Card\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function PricingClient() {\r\n  const [selectedRegion, setSelectedRegion] = useState(\"international\");\r\n  const [selectedBilling, setSelectedBilling] = useState(\"yearly\");\r\n  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const lang = window.navigator.language.toLowerCase();\r\n      if (lang.includes(\"in\")) {\r\n        setSelectedRegion(\"india\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const pricingData = {\r\n    international: {\r\n      ultraLite: {\r\n        name: \"Ultra Lite\",\r\n        pricing: \"$1.99 per day\",\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"5 minutes\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"3 Tracks\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"50 minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"3 Tracks\"\r\n        }\r\n      },\r\n      lite: {\r\n        name: \"Lite\",\r\n        pricing: {\r\n          yearly: \"$9.99\",\r\n          monthly: \"$19.99\"\r\n        },\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"Any\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"100 per month\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"500 minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"50 Tracks per month\"\r\n        }\r\n      },\r\n      pro: {\r\n        name: \"Pro\",\r\n        pricing: {\r\n          yearly: \"$14.99\",\r\n          monthly: \"$29.99\"\r\n        },\r\n        bestValue: true,\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"Any\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"200 per month\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"800 Minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"100 Tracks per month\"\r\n        }\r\n      }\r\n    },\r\n    india: {\r\n      ultraLite: {\r\n        name: \"Ultra Lite\",\r\n        pricing: \"Rs.99 per day\",\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"5 minutes\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"3 Tracks\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"50 minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"3 Tracks\"\r\n        }\r\n      },\r\n      lite: {\r\n        name: \"Lite\",\r\n        pricing: {\r\n          yearly: \"Rs.150/month, Rs.1800 billed upfront\",\r\n          monthly: \"Rs.190/month\"\r\n        },\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"Any\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"100 per month\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"500 minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"20 Tracks\"\r\n        }\r\n      },\r\n      pro: {\r\n        name: \"Pro\",\r\n        pricing: {\r\n          yearly: \"Rs.250/month, Rs.3000 billed upfront\",\r\n          monthly: \"Rs.290/month\"\r\n        },\r\n        bestValue: true,\r\n        features: {\r\n          \"Number of Tracks\": \"Any\",\r\n          \"Input/Output Format\": \"MP3, WAV, OGG, FLAC, AVI, MP4, MKV, AIFF, ACC\",\r\n          \"Fast Processing\": \"Yes\",\r\n          \"Maximum Song Length\": \"Any\",\r\n          \"Maximum Length for Download\": \"Full Length\",\r\n          \"Number of Mastered Song Downloads\": \"200 per month\",\r\n          \"Vocal/Basic/Advanced Stem Separation\": \"Yes\",\r\n          \"Stem Download\": \"800 Minutes\",\r\n          \"Batch Upload\": \"Yes\",\r\n          \"Chords Conversion\": \"Yes\",\r\n          \"Chords Download\": \"100 Tracks per month\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const plans = [\r\n    pricingData[selectedRegion].ultraLite,\r\n    pricingData[selectedRegion].lite,\r\n    pricingData[selectedRegion].pro,\r\n  ];\r\n\r\n  const handlePayPal = (planName: string) => {\r\n    alert(`Redirecting to PayPal for plan: ${planName}`);\r\n    // TODO: Integrate PayPal SDK or redirection\r\n  };\r\n\r\n  const handleStripeClick = (planName: string) => {\r\n    setSelectedPlan(planName);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedPlan(null);\r\n  };\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <section className=\"relative min-h-screen overflow-hidden\">\r\n        <video\r\n          className=\"absolute top-0 left-0 w-full h-full object-cover\"\r\n          src=\"./videos/pricing_background.mp4\"\r\n          autoPlay\r\n          muted\r\n          loop\r\n        />\r\n        <div className=\"absolute inset-0 bg-gradient-to-r from-green-900/30 to-blue-900/40 backdrop-blur-sm\" />\r\n        <div className=\"relative z-10 text-white\">\r\n          <div className=\"container mx-auto px-4 sm:px-6 py-12 md:py-20\">\r\n            <div className=\"text-center pb-12\">\r\n              <h1 className=\"text-4xl font-bold md:text-5xl bg-gradient-to-r from-green-300 via-blue-400 to-green-300 bg-clip-text text-transparent animate-gradient-shift\">\r\n                Pricing Plans\r\n              </h1>\r\n              <div className=\"mt-8 flex justify-center gap-4\">\r\n                <button\r\n                  onClick={() => setSelectedBilling(\"monthly\")}\r\n\t\t\t\t \r\n                  className={`px-6 py-2 rounded-full ${\r\n                    selectedBilling === \"monthly\"\r\n                      ? \"bg-gradient-to-r from-green-400 to-blue-500 text-white\"\r\n                      : \"bg-gray-800/50 text-gray-300 hover:bg-gray-700/50\"\r\n                  }`}\r\n                >\r\n                  Monthly\r\n                </button>\r\n                <button\r\n                  onClick={() => setSelectedBilling(\"yearly\")}\r\n\t\t\t\t  \r\n                  className={`px-6 py-2 rounded-full ${\r\n                    selectedBilling === \"yearly\"\r\n                      ? \"bg-gradient-to-r from-green-400 to-blue-500 text-white\"\r\n                      : \"bg-gray-800/50 text-gray-300 hover:bg-gray-700/50\"\r\n                  }`}\r\n                >\r\n                  Yearly\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 gap-8 md:grid-cols-3\">\r\n              {plans.map((plan, index) => {\r\n                let pricingDisplay =\r\n                  typeof plan.pricing === \"string\"\r\n                    ? plan.pricing\r\n                    : plan.pricing[selectedBilling];\r\n                if (plan.bestValue) {\r\n                  pricingDisplay = `Best Value for Money - ${pricingDisplay}`;\r\n                }\r\n\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"relative rounded-2xl bg-gray-900/80 backdrop-blur-lg border border-gray-700/50 p-8 shadow-2xl hover:shadow-green-500/20 transition-all duration-300\"\r\n                  >\r\n                    <h2 className=\"text-2xl font-bold bg-gradient-to-r from-green-400 to-blue-500 bg-clip-text text-transparent\">\r\n                      {plan.name}\r\n                    </h2>\r\n                    <div className=\"mt-4 text-3xl font-bold\">{pricingDisplay}</div>\r\n\r\n                    <ul className=\"my-6 space-y-4 text-sm\">\r\n                      {Object.entries(plan.features).map(([key, value]) => (\r\n                        <li key={key} className=\"flex text-gray-300 hover:text-white\">\r\n                          <svg\r\n                            className=\"w-5 h-5 mr-3 text-green-400 mt-1\"\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 20 20\"\r\n                          >\r\n                            <path\r\n                              fillRule=\"evenodd\"\r\n                              d=\"M16.707 5.293a1 1 0 00-1.414 0L9 11.586 5.707 8.293a1 1 0 10-1.414 1.414l4 4a1 1 0 001.414 0l7-7a1 1 0 000-1.414z\"\r\n                              clipRule=\"evenodd\"\r\n                            />\r\n                          </svg>\r\n                          <span>\r\n                            <strong>{key}:</strong> {value}\r\n                          </span>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n\r\n                    <div className=\"flex flex-col gap-2\">\r\n                      <button\r\n                        onClick={() => handleStripeClick(plan.name)}\r\n                        className=\"py-2 bg-gradient-to-r from-green-400 to-blue-500 text-white rounded-lg font-semibold hover:from-green-500 hover:to-blue-600\"\r\n                      >\r\n                        Pay with Card\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handlePayPal(plan.name)}\r\n                        className=\"py-2 border border-gray-500 rounded-lg text-white hover:bg-gray-700\"\r\n                      >\r\n                        Pay with PayPal\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Modal */}\r\n            {showModal && (\r\n              <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm transition-opacity\">\r\n                <div className=\"bg-gray-900 p-6 rounded-2xl max-w-md w-full border border-gray-700 relative shadow-2xl scale-95 opacity-0 animate-fadeIn\">\r\n                  <button\r\n                    onClick={closeModal}\r\n                    className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    ✕\r\n                  </button>\r\n                  <h3 className=\"text-xl font-semibold mb-4 text-white\">\r\n                    Enter card details for <span className=\"text-green-400\">{selectedPlan}</span>\r\n                  </h3>\r\n                  <PaymentForm selectedPlan={selectedPlan!} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <style jsx>{`\r\n          @keyframes gradient-shift {\r\n            0% {\r\n              background-position: 0% 50%;\r\n            }\r\n            50% {\r\n              background-position: 100% 50%;\r\n            }\r\n            100% {\r\n              background-position: 0% 50%;\r\n            }\r\n          }\r\n\r\n          .animate-gradient-shift {\r\n            background-size: 200% auto;\r\n            animation: gradient-shift 6s linear infinite;\r\n          }\r\n\r\n          @keyframes fadeIn {\r\n            0% {\r\n              opacity: 0;\r\n              transform: scale(0.95);\r\n            }\r\n            100% {\r\n              opacity: 1;\r\n              transform: scale(1);\r\n            }\r\n          }\r\n\r\n          .animate-fadeIn {\r\n            animation: fadeIn 0.3s ease-out forwards;\r\n          }\r\n        `}</style>\r\n      </section>\r\n    </Elements>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}