{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nuruj/OneDrive/Desktop/monaarch_V1/fronend_work/app/pricing/PricingClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  Elements,\r\n  CardNumberElement,\r\n  CardExpiryElement,\r\n  CardCvcElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst stripePromise = loadStripe(\"YOUR_STRIPE_PUBLIC_KEY\");\r\n\r\nconst pricingData = [\r\n  {\r\n    name: \"Ultra Lite\",\r\n    price: \"4.99\",\r\n    features: [\"1 track/day\", \"128kbps MP3\", \"Basic Processing\"],\r\n  },\r\n  {\r\n    name: \"Lite\",\r\n    price: \"9.99\",\r\n    features: [\"5 tracks/day\", \"320kbps MP3\", \"Fast Processing\"],\r\n  },\r\n  {\r\n    name: \"Pro\",\r\n    price: \"19.99\",\r\n    features: [\"Unlimited Tracks\", \"WAV/MP3\", \"Stem Separation\"],\r\n  },\r\n];\r\n\r\nfunction PaymentForm({ selectedPlan, onClose }: { selectedPlan: any; onClose: () => void }) {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [cardholderName, setCardholderName] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) return;\r\n\r\n    const card = elements.getElement(CardNumberElement);\r\n    if (!card) return;\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card,\r\n      billing_details: {\r\n        name: cardholderName,\r\n      },\r\n    });\r\n\r\n    if (error) {\r\n      alert(error.message);\r\n    } else {\r\n      alert(`Payment method created for ${selectedPlan.name}: ${paymentMethod.id}`);\r\n      // TODO: Send paymentMethod.id and selectedPlan info to your server\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-6 space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm mb-1 text-white\">Cardholder Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={cardholderName}\r\n          onChange={(e) => setCardholderName(e.target.value)}\r\n          className=\"w-full px-4 py-2 bg-gray-800 text-white rounded-md border border-gray-600 focus:outline-none focus:ring-2 focus:ring-green-500\"\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label className=\"block text-sm mb-1 text-white\">Card Number</label>\r\n        <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n          <CardNumberElement className=\"w-full\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-4\">\r\n        <div className=\"flex-1\">\r\n          <label className=\"block text-sm mb-1 text-white\">Expiry Date</label>\r\n          <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n            <CardExpiryElement className=\"w-full\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <label className=\"block text-sm mb-1 text-white\">CVC</label>\r\n          <div className=\"p-2 bg-gray-800 rounded-md border border-gray-600 text-white\">\r\n            <CardCvcElement className=\"w-full\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-3 bg-gradient-to-r from-green-400 to-blue-500 text-white font-semibold rounded-lg shadow-lg hover:from-green-500 hover:to-blue-600 transition-all duration-300\"\r\n      >\r\n        Pay ${selectedPlan.price}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function PricingClient() {\r\n  const [selectedPlan, setSelectedPlan] = useState<any | null>(null);\r\n  const [paymentType, setPaymentType] = useState<\"card\" | \"paypal\" | null>(null);\r\n\r\n  const closeModal = () => {\r\n    setSelectedPlan(null);\r\n    setPaymentType(null);\r\n  };\r\n\r\n  return (\r\n    <PayPalScriptProvider options={{ clientId: \"YOUR_PAYPAL_SANDBOX_CLIENT_ID\" }}>\r\n      <Elements stripe={stripePromise}>\r\n        <section className=\"relative min-h-screen overflow-hidden\">\r\n          <video\r\n            className=\"absolute top-0 left-0 w-full h-full object-cover\"\r\n            src=\"./videos/pricing_background.mp4\"\r\n            autoPlay\r\n            muted\r\n            loop\r\n          />\r\n          <div className=\"absolute inset-0 bg-gradient-to-r from-green-900/30 to-blue-900/40 backdrop-blur-sm\" />\r\n          <div className=\"relative z-10 text-white\">\r\n            <div className=\"container mx-auto px-4 sm:px-6 py-12 md:py-20 text-center\">\r\n              <h1 className=\"text-4xl font-bold md:text-5xl bg-gradient-to-r from-green-300 via-blue-400 to-green-300 bg-clip-text text-transparent animate-gradient-shift\">\r\n                Pricing Plans\r\n              </h1>\r\n              <div className=\"mt-12 flex justify-center gap-6 flex-wrap\">\r\n                {pricingData.map((plan) => (\r\n                  <div\r\n                    key={plan.name}\r\n                    className=\"bg-gray-900/80 backdrop-blur-lg border border-gray-700 p-6 rounded-2xl w-72 shadow-lg hover:shadow-green-400/30 transition\"\r\n                  >\r\n                    <h2 className=\"text-xl font-bold text-gradient\">{plan.name}</h2>\r\n                    <p className=\"text-2xl font-semibold mt-2\">${plan.price}</p>\r\n                    <div className=\"mt-4 space-y-2 text-sm text-gray-300\">\r\n                      {plan.features.map((feature: string) => (\r\n                        <p key={feature}>{feature}</p>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"mt-6 flex flex-col gap-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedPlan(plan);\r\n                          setPaymentType(\"card\");\r\n                        }}\r\n                        className=\"py-2 bg-gradient-to-r from-green-400 to-blue-500 text-white rounded-lg font-semibold hover:from-green-500 hover:to-blue-600\"\r\n                      >\r\n                        Pay with Card\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedPlan(plan);\r\n                          setPaymentType(\"paypal\");\r\n                        }}\r\n                        className=\"py-2 border border-gray-500 rounded-lg text-white hover:bg-gray-700\"\r\n                      >\r\n                        Pay with PayPal\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {selectedPlan && paymentType && (\r\n            <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm transition-opacity\">\r\n              <div className=\"bg-gray-900 p-6 rounded-2xl max-w-md w-full border border-gray-700 relative shadow-2xl scale-95 opacity-0 animate-fadeIn\">\r\n                <button\r\n                  onClick={closeModal}\r\n                  className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  âœ•\r\n                </button>\r\n                <h3 className=\"text-xl font-semibold mb-4 text-white\">\r\n                  Pay for <span className=\"text-green-400\">{selectedPlan.name}</span>\r\n                </h3>\r\n\r\n                {paymentType === \"card\" ? (\r\n                  <PaymentForm selectedPlan={selectedPlan} onClose={closeModal} />\r\n                ) : (\r\n                  <PayPalButtons\r\n                    style={{ layout: \"vertical\", color: \"blue\", shape: \"pill\", label: \"paypal\" }}\r\n                    createOrder={(data, actions) => {\r\n                      return actions.order.create({\r\n                        purchase_units: [\r\n                          {\r\n                            description: `Monaarch Plan - ${selectedPlan.name}`,\r\n                            amount: {\r\n                              value: selectedPlan.price,\r\n                            },\r\n                          },\r\n                        ],\r\n                      });\r\n                    }}\r\n                    onApprove={async (data, actions) => {\r\n                      const details = await actions.order?.capture();\r\n                      alert(\"Transaction completed by \" + details?.payer.name.given_name);\r\n                      closeModal();\r\n                    }}\r\n                    onError={(err) => {\r\n                      console.error(\"PayPal Error:\", err);\r\n                      alert(\"Something went wrong with PayPal.\");\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <style jsx>{`\r\n            @keyframes gradient-shift {\r\n              0% {\r\n                background-position: 0% 50%;\r\n              }\r\n              50% {\r\n                background-position: 100% 50%;\r\n              }\r\n              100% {\r\n                background-position: 0% 50%;\r\n              }\r\n            }\r\n            .animate-gradient-shift {\r\n              background-size: 200% auto;\r\n              animation: gradient-shift 6s linear infinite;\r\n            }\r\n            .text-gradient {\r\n              background-image: linear-gradient(to right, #4ade80, #60a5fa);\r\n              background-clip: text;\r\n              -webkit-background-clip: text;\r\n              color: transparent;\r\n            }\r\n            .animate-fadeIn {\r\n              animation: fadeIn 0.3s ease-out forwards;\r\n            }\r\n            @keyframes fadeIn {\r\n              from {\r\n                opacity: 0;\r\n                transform: scale(0.95);\r\n              }\r\n              to {\r\n                opacity: 1;\r\n                transform: scale(1);\r\n              }\r\n            }\r\n          `}</style>\r\n        </section>\r\n      </Elements>\r\n    </PayPalScriptProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}